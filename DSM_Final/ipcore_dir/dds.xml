<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>dds</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>event_s_phase_tlast_missing_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>event_s_phase_tlast_missing</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.EVENT_S_PHASE_TLAST_MISSING_INTF.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>event_s_phase_tlast_unexpected_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>event_s_phase_tlast_unexpected</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.EVENT_S_PHASE_TLAST_UNEXPECTED_INTF.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>event_s_phase_chanid_incorrect_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>event_s_phase_chanid_incorrect</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.EVENT_S_PHASE_CHANID_INCORRECT_INTF.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>event_s_config_tlast_missing_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>event_s_config_tlast_missing</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.EVENT_S_CONFIG_TLAST_MISSING_INTF.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>event_s_config_tlast_unexpected_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>event_s_config_tlast_unexpected</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.EVENT_S_CONFIG_TLAST_UNEXPECTED_INTF.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>S_AXIS_PHASE</spirit:name>
      <spirit:displayName>S_AXIS_PHASE</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_phase_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_phase_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_phase_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_phase_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_phase_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>CORE_TDATATYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXIS_PHASE.CORE_TDATATYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} array_type {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} size {attribs {resolve_type generated dependancy chan_size format long minimum {} maximum {}} value 0} stride {attribs {resolve_type generated dependancy chan_stride format long minimum {} maximum {}} value {}} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_pinc {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value pinc} enabled {attribs {resolve_type generated dependancy pinc_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value pinc} bitwidth {attribs {resolve_type generated dependancy pinc_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} real {fixed {fractwidth {attribs {resolve_type generated dependancy pinc_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}} field_poff {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value poff} enabled {attribs {resolve_type generated dependancy poff_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value poff} bitwidth {attribs {resolve_type generated dependancy poff_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy poff_offset format long minimum {} maximum {}} value {}} real {fixed {fractwidth {attribs {resolve_type generated dependancy poff_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}} field_phase_in {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value phase_in} enabled {attribs {resolve_type generated dependancy phase_in_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value phase_in} bitwidth {attribs {resolve_type generated dependancy phase_in_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} real {fixed {fractwidth {attribs {resolve_type generated dependancy phase_in_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}}}}}}</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CORE_TUSERTYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXIS_PHASE.CORE_TUSERTYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_chanid {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} enabled {attribs {resolve_type generated dependancy chanid_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} bitwidth {attribs {resolve_type generated dependancy chanid_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} integer {signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}} field_user {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} enabled {attribs {resolve_type generated dependancy user_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} bitwidth {attribs {resolve_type generated dependancy user_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy user_offset format long minimum {} maximum {}} value {}}}}}}</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>aclk_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>aclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.ACLK_INTF.ASSOCIATED_BUSIF">M_AXIS_PHASE:S_AXIS_CONFIG:M_AXIS_DATA:S_AXIS_PHASE</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.ACLK_INTF.ASSOCIATED_RESET">aresetn</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_CLKEN</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.ACLK_INTF.ASSOCIATED_CLKEN">aclken</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>aresetn_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>aresetn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:resolve="immediate" spirit:id="BUSIFPARAM_VALUE.ARESETN_INTF.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>aclken_intf</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="clockenable" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="common" spirit:name="clockenable_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>aclken</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>M_AXIS_DATA</spirit:name>
      <spirit:displayName>M_AXIS_DATA</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_data_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_data_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_data_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_data_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_data_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>CORE_TDATATYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_DATA.CORE_TDATATYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} array_type {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} size {attribs {resolve_type generated dependancy chan_size format long minimum {} maximum {}} value 0} stride {attribs {resolve_type generated dependancy chan_stride format long minimum {} maximum {}} value {}} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_cosine {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value cosine} enabled {attribs {resolve_type generated dependancy cosine_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value cosine} bitwidth {attribs {resolve_type generated dependancy cosine_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} real {fixed {fractwidth {attribs {resolve_type generated dependancy cosine_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value true}}}}} field_sine {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value sine} enabled {attribs {resolve_type generated dependancy sine_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value sine} bitwidth {attribs {resolve_type generated dependancy sine_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy sine_offset format long minimum {} maximum {}} value {}} real {fixed {fractwidth {attribs {resolve_type generated dependancy sine_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value true}}}}}}}}}</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CORE_TUSERTYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_DATA.CORE_TUSERTYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_chanid {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} enabled {attribs {resolve_type generated dependancy chanid_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} bitwidth {attribs {resolve_type generated dependancy chanid_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} integer {signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}} field_user {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} enabled {attribs {resolve_type generated dependancy user_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} bitwidth {attribs {resolve_type generated dependancy user_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy user_offset format long minimum {} maximum {}} value {}}}}}}</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>S_AXIS_CONFIG</spirit:name>
      <spirit:displayName>S_AXIS_CONFIG</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_config_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_config_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_config_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_config_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>CORE_TDATATYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXIS_CONFIG.CORE_TDATATYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} array_type {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} size {attribs {resolve_type generated dependancy chan_size format long minimum {} maximum {}} value 0} stride {attribs {resolve_type generated dependancy chan_stride format long minimum {} maximum {}} value {}} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_pinc {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value pinc} enabled {attribs {resolve_type generated dependancy pinc_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value pinc} bitwidth {attribs {resolve_type generated dependancy pinc_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} real {fixed {fractwidth {attribs {resolve_type generated dependancy pinc_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}} field_poff {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value poff} enabled {attribs {resolve_type generated dependancy poff_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value poff} bitwidth {attribs {resolve_type generated dependancy poff_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy poff_offset format long minimum {} maximum {}} value {}} real {fixed {fractwidth {attribs {resolve_type generated dependancy poff_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}}}}}}</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>M_AXIS_PHASE</spirit:name>
      <spirit:displayName>M_AXIS_PHASE</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="axi4" spirit:name="AXI4Stream_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_phase_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_phase_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_phase_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_phase_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_phase_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>CORE_TDATATYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_PHASE.CORE_TDATATYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} array_type {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chan} size {attribs {resolve_type generated dependancy chan_size format long minimum {} maximum {}} value 0} stride {attribs {resolve_type generated dependancy chan_stride format long minimum {} maximum {}} value {}} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_phase_out {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value phase_out} enabled {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value phase_out} bitwidth {attribs {resolve_type generated dependancy phase_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} real {fixed {fractwidth {attribs {resolve_type generated dependancy phase_fractwidth format long minimum {} maximum {}} value {}} signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}}}}}}}</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CORE_TUSERTYPE</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_PHASE.CORE_TUSERTYPE">datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type automatic dependancy {} format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value {}} struct {field_chanid {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} enabled {attribs {resolve_type generated dependancy chanid_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value chanid} bitwidth {attribs {resolve_type generated dependancy chanid_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type immediate dependancy {} format long minimum {} maximum {}} value 0} integer {signed {attribs {resolve_type immediate dependancy {} format bool minimum {} maximum {}} value false}}}} field_user {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} enabled {attribs {resolve_type generated dependancy user_enabled format bool minimum {} maximum {}} value true} datatype {name {attribs {resolve_type immediate dependancy {} format string minimum {} maximum {}} value user} bitwidth {attribs {resolve_type generated dependancy user_width format long minimum {} maximum {}} value {}} bitoffset {attribs {resolve_type generated dependancy user_offset format long minimum {} maximum {}} value {}}}}}}</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_miscfiles</spirit:name>
        <spirit:displayName>Miscellaneous</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:misc.files</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_miscfiles_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>1626311834</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagesynthesis</spirit:name>
        <spirit:displayName>Synthesis</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagesynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>1626311834</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguageinstantiationtemplate</spirit:name>
        <spirit:displayName>Instantiation Template</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.template</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>1626311834</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagebehavioralsimulation</spirit:name>
        <spirit:displayName>Simulation</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>1626311834</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>aclk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>aclken</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_ACLKEN&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>aresetn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_ARESETN&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_phase_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_phase_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TREADY&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_phase_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_PHASE_TDATA_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_phase_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1) and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TLAST&apos;)) = 2) or spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_phase_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_PHASE_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_PHASE_HAS_TUSER&apos;)) > 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_config_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_config_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TREADY&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_config_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_CONFIG_TDATA_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_config_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_data_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_data_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TREADY&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_data_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_DATA_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_data_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TLAST&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_data_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_DATA_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_DATA&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_DATA_HAS_TUSER&apos;)) > 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_phase_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_phase_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TREADY&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_phase_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_PHASE_TDATA_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_phase_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_TLAST&apos;)) != 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_phase_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_PHASE_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_M_PHASE&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_M_PHASE_HAS_TUSER&apos;)) > 0)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>event_s_phase_tlast_missing</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_CONFIG_SYNC_MODE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>event_s_phase_tlast_unexpected</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_CONFIG_SYNC_MODE&apos;)) = 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>event_s_phase_chanid_incorrect</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_PHASE&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1 and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_PHASE_HAS_TUSER&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_PHASE_HAS_TUSER&apos;)) = 3))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>event_s_config_tlast_missing</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>event_s_config_tlast_unexpected</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_S_CONFIG&apos;)) = 1 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHANNELS&apos;)) > 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_axi_pinc_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ACCUMULATOR_WIDTH&apos;)) - 1)">27</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_axi_poff_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ACCUMULATOR_WIDTH&apos;)) - 1)">27</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_axi_chan_in</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_CHAN_WIDTH&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_core_nd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_phase</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ACCUMULATOR_WIDTH&apos;)) - 1)">27</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>debug_phase_nd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="immediate">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="string">
        <spirit:name>c_xdevicefamily</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_XDEVICEFAMILY">virtex6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_accumulator_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ACCUMULATOR_WIDTH">28</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_channels</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CHANNELS">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_channel_index</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_CHANNEL_INDEX">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_phase_out</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_PHASE_OUT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_phasegen</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_PHASEGEN">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_sincos</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_SINCOS">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_latency</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_LATENCY">-1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_mem_type</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MEM_TYPE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_negative_cosine</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NEGATIVE_COSINE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_negative_sine</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NEGATIVE_SINE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_noise_shaping</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NOISE_SHAPING">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_outputs_required</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_OUTPUTS_REQUIRED">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_output_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_OUTPUT_WIDTH">6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_phase_angle_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PHASE_ANGLE_WIDTH">6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_phase_increment</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PHASE_INCREMENT">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>c_phase_increment_value</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PHASE_INCREMENT_VALUE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_phase_offset</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PHASE_OFFSET">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>c_phase_offset_value</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PHASE_OFFSET_VALUE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_optimise_goal</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_OPTIMISE_GOAL">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_use_dsp48</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_DSP48">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_por_mode</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_POR_MODE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_amplitude</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_AMPLITUDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_aclken</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_ACLKEN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_aresetn</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_ARESETN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_tlast</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_TLAST">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_tready</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_TREADY">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_s_phase</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_S_PHASE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_s_phase_tdata_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_PHASE_TDATA_WIDTH">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_s_phase_has_tuser</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_PHASE_HAS_TUSER">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_s_phase_tuser_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_PHASE_TUSER_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_s_config</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_S_CONFIG">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_s_config_sync_mode</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_CONFIG_SYNC_MODE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_s_config_tdata_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_S_CONFIG_TDATA_WIDTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_m_data</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_M_DATA">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_data_tdata_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_DATA_TDATA_WIDTH">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_data_has_tuser</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_DATA_HAS_TUSER">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_data_tuser_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_DATA_TUSER_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_m_phase</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_M_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_phase_tdata_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_PHASE_TDATA_WIDTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_phase_has_tuser</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_PHASE_HAS_TUSER">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_m_phase_tuser_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_M_PHASE_TUSER_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_debug_interface</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEBUG_INTERFACE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_chan_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CHAN_WIDTH">1</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choices_0</spirit:name>
      <spirit:enumeration>Phase_Generator_and_SIN_COS_LUT</spirit:enumeration>
      <spirit:enumeration>Phase_Generator_only</spirit:enumeration>
      <spirit:enumeration>SIN_COS_LUT_only</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_1</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>5</spirit:enumeration>
      <spirit:enumeration>6</spirit:enumeration>
      <spirit:enumeration>7</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>9</spirit:enumeration>
      <spirit:enumeration>10</spirit:enumeration>
      <spirit:enumeration>11</spirit:enumeration>
      <spirit:enumeration>12</spirit:enumeration>
      <spirit:enumeration>13</spirit:enumeration>
      <spirit:enumeration>14</spirit:enumeration>
      <spirit:enumeration>15</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_2</spirit:name>
      <spirit:enumeration>System_Parameters</spirit:enumeration>
      <spirit:enumeration>Hardware_Parameters</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_3</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>Phase_Dithering</spirit:enumeration>
      <spirit:enumeration>Taylor_Series_Corrected</spirit:enumeration>
      <spirit:enumeration>Auto</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_4</spirit:name>
      <spirit:enumeration>Fixed</spirit:enumeration>
      <spirit:enumeration>Programmable</spirit:enumeration>
      <spirit:enumeration>Streaming</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_5</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>Fixed</spirit:enumeration>
      <spirit:enumeration>Programmable</spirit:enumeration>
      <spirit:enumeration>Streaming</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_6</spirit:name>
      <spirit:enumeration>Sine</spirit:enumeration>
      <spirit:enumeration>Cosine</spirit:enumeration>
      <spirit:enumeration>Sine_and_Cosine</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_7</spirit:name>
      <spirit:enumeration>Full_Range</spirit:enumeration>
      <spirit:enumeration>Unit_Circle</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_8</spirit:name>
      <spirit:enumeration>Auto</spirit:enumeration>
      <spirit:enumeration>Distributed_ROM</spirit:enumeration>
      <spirit:enumeration>Block_ROM</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_9</spirit:name>
      <spirit:enumeration>Auto</spirit:enumeration>
      <spirit:enumeration>Area</spirit:enumeration>
      <spirit:enumeration>Speed</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_10</spirit:name>
      <spirit:enumeration>Minimal</spirit:enumeration>
      <spirit:enumeration>Maximal</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_11</spirit:name>
      <spirit:enumeration>Not_Required</spirit:enumeration>
      <spirit:enumeration>Vector_Framing</spirit:enumeration>
      <spirit:enumeration>Packet_Framing</spirit:enumeration>
      <spirit:enumeration>Config_Triggered</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_12</spirit:name>
      <spirit:enumeration>Not_Required</spirit:enumeration>
      <spirit:enumeration>Chan_ID_Field</spirit:enumeration>
      <spirit:enumeration>User_Field</spirit:enumeration>
      <spirit:enumeration>User_and_Chan_ID_Field</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_13</spirit:name>
      <spirit:enumeration>Not_Required</spirit:enumeration>
      <spirit:enumeration>Chan_ID_Field</spirit:enumeration>
      <spirit:enumeration>User_Field</spirit:enumeration>
      <spirit:enumeration>User_and_Chan_ID_Field</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_14</spirit:name>
      <spirit:enumeration>Not_Required</spirit:enumeration>
      <spirit:enumeration>Chan_ID_Field</spirit:enumeration>
      <spirit:enumeration>User_Field</spirit:enumeration>
      <spirit:enumeration>User_and_Chan_ID_Field</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_15</spirit:name>
      <spirit:enumeration>On_Vector</spirit:enumeration>
      <spirit:enumeration>On_Packet</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_16</spirit:name>
      <spirit:enumeration>Auto</spirit:enumeration>
      <spirit:enumeration>Configurable</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_17</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>5</spirit:enumeration>
      <spirit:enumeration>6</spirit:enumeration>
      <spirit:enumeration>7</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>9</spirit:enumeration>
      <spirit:enumeration>10</spirit:enumeration>
      <spirit:enumeration>11</spirit:enumeration>
      <spirit:enumeration>12</spirit:enumeration>
      <spirit:enumeration>13</spirit:enumeration>
      <spirit:enumeration>14</spirit:enumeration>
      <spirit:enumeration>15</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
      <spirit:enumeration>17</spirit:enumeration>
      <spirit:enumeration>18</spirit:enumeration>
      <spirit:enumeration>19</spirit:enumeration>
      <spirit:enumeration>20</spirit:enumeration>
      <spirit:enumeration>21</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_18</spirit:name>
      <spirit:enumeration>Coregen</spirit:enumeration>
      <spirit:enumeration>Sysgen</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_miscfiles_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>dds.xco</spirit:name>
        <spirit:userFileType>xco</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>dds.asy</spirit:name>
        <spirit:userFileType>asy</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>dds_xmdf.tcl</spirit:name>
        <spirit:fileType>tclSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagesynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>dds.ngc</spirit:name>
        <spirit:userFileType>ngc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>dds.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>dds.vho</spirit:name>
        <spirit:userFileType>vhdlTemplate</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>dds.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>The Xilinx DDS Compiler LogiCORE provides Direct Digital Synthesizers (DDS) and optionally either Phase Generator or Sine/Cosine Lookup Table constituent parts as independent cores. The core features sine, cosine or quadrature outputs with 3 to 26-bit output sample precision. The core supports up to 16 channels by time-sharing the sine/cosine table which dramatically reduces the area requirement when multiple channels are needed.  Phase Dithering and Taylor Series Correction options provide high dynamic range signals using minimal FPGA resources. In addition, the core has an optional phase offset capability, providing support for multiple synthesizers with precisely controlled phase differences.</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:displayName>Component Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.COMPONENT_NAME" spirit:order="1">dds</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PartsPresent</spirit:name>
      <spirit:displayName>Configuration Options</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PARTSPRESENT" spirit:choiceRef="choices_0" spirit:order="2">Phase_Generator_and_SIN_COS_LUT</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DDS_Clock_Rate</spirit:name>
      <spirit:displayName>System Clock</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.DDS_CLOCK_RATE" spirit:order="3" spirit:minimum="0.01" spirit:maximum="550">30.72</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Channels</spirit:name>
      <spirit:displayName>Number of Channels</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.CHANNELS" spirit:choiceRef="choices_1" spirit:order="4">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Parameter_Entry</spirit:name>
      <spirit:displayName>Parameter Selection</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PARAMETER_ENTRY" spirit:choiceRef="choices_2" spirit:order="5">System_Parameters</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Spurious_Free_Dynamic_Range</spirit:name>
      <spirit:displayName>Spurious Free Dynamic Range</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.SPURIOUS_FREE_DYNAMIC_RANGE" spirit:order="6" spirit:minimum="18" spirit:maximum="150">150</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Frequency_Resolution</spirit:name>
      <spirit:displayName>Frequency Resolution</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.FREQUENCY_RESOLUTION" spirit:order="7" spirit:minimum="0.0000000000000" spirit:maximum="9999999">0.4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Noise_Shaping</spirit:name>
      <spirit:displayName>Noise Shaping</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.NOISE_SHAPING" spirit:choiceRef="choices_3" spirit:order="8">Auto</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Width</spirit:name>
      <spirit:displayName>Phase Width</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_WIDTH" spirit:order="9" spirit:minimum="3" spirit:maximum="48">27</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Width</spirit:name>
      <spirit:displayName>Output Width</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_WIDTH" spirit:order="10" spirit:minimum="3" spirit:maximum="26">26</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Increment</spirit:name>
      <spirit:displayName>Phase Increment</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_INCREMENT" spirit:choiceRef="choices_4" spirit:order="11">Fixed</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_offset</spirit:name>
      <spirit:displayName>Phase Offset</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET" spirit:choiceRef="choices_5" spirit:order="12">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Selection</spirit:name>
      <spirit:displayName>Output Selection</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_SELECTION" spirit:choiceRef="choices_6" spirit:order="13">Sine_and_Cosine</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Negative_Sine</spirit:name>
      <spirit:displayName>Negative Sine</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.NEGATIVE_SINE" spirit:order="14">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Negative_Cosine</spirit:name>
      <spirit:displayName>Negative Cosine</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.NEGATIVE_COSINE" spirit:order="15">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Amplitude_Mode</spirit:name>
      <spirit:displayName>Amplitude Mode</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.AMPLITUDE_MODE" spirit:choiceRef="choices_7" spirit:order="16">Full_Range</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Memory_Type</spirit:name>
      <spirit:displayName>Memory Type</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.MEMORY_TYPE" spirit:choiceRef="choices_8" spirit:order="17">Auto</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Optimization_Goal</spirit:name>
      <spirit:displayName>Optimization Goal</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.OPTIMIZATION_GOAL" spirit:choiceRef="choices_9" spirit:order="18">Auto</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DSP48_Use</spirit:name>
      <spirit:displayName>DSP48 Use</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.DSP48_USE" spirit:choiceRef="choices_10" spirit:order="19">Minimal</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Has_Phase_Out</spirit:name>
      <spirit:displayName>Has Phase Out</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.HAS_PHASE_OUT" spirit:order="20">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DATA_Has_TLAST</spirit:name>
      <spirit:displayName>DATA Has TLAST</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.DATA_HAS_TLAST" spirit:choiceRef="choices_11" spirit:order="21">Not_Required</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Has_TREADY</spirit:name>
      <spirit:displayName>Output TREADY</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.HAS_TREADY" spirit:order="22">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>S_PHASE_Has_TUSER</spirit:name>
      <spirit:displayName>Input</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.S_PHASE_HAS_TUSER" spirit:choiceRef="choices_12" spirit:order="23">Not_Required</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>S_PHASE_TUSER_Width</spirit:name>
      <spirit:displayName>User Field Width</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.S_PHASE_TUSER_WIDTH" spirit:order="24" spirit:minimum="1" spirit:maximum="256">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>M_DATA_Has_TUSER</spirit:name>
      <spirit:displayName>DATA Output</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.M_DATA_HAS_TUSER" spirit:choiceRef="choices_13" spirit:order="25">Not_Required</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>M_PHASE_Has_TUSER</spirit:name>
      <spirit:displayName>PHASE Output</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.M_PHASE_HAS_TUSER" spirit:choiceRef="choices_14" spirit:order="26">Not_Required</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>S_CONFIG_Sync_Mode</spirit:name>
      <spirit:displayName>Synchronization Mode</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.S_CONFIG_SYNC_MODE" spirit:choiceRef="choices_15" spirit:order="27">On_Vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Latency_Configuration</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.LATENCY_CONFIGURATION" spirit:choiceRef="choices_16" spirit:order="28">Auto</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Latency</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.LATENCY" spirit:choiceRef="choices_17" spirit:order="29">9</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Has_ARESETn</spirit:name>
      <spirit:displayName>ARESETn (active low)</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.HAS_ARESETN" spirit:order="30">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Has_ACLKEN</spirit:name>
      <spirit:displayName>ACLKEN</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.HAS_ACLKEN" spirit:order="31">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency1</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY1" spirit:order="32" spirit:minimum="0.0000000000000" spirit:maximum="9999999">9</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC1</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC1" spirit:order="33">10010110000000000000000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles1</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES1" spirit:order="34">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF1</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF1" spirit:order="35">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency2</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY2" spirit:order="36">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC2</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC2" spirit:order="37">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles2</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES2" spirit:order="38">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF2</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF2" spirit:order="39">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency3</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY3" spirit:order="40">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC3</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC3" spirit:order="41">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles3</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES3" spirit:order="42">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF3</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF3" spirit:order="43">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency4</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY4" spirit:order="44">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC4</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC4" spirit:order="45">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles4</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES4" spirit:order="46">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF4</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF4" spirit:order="47">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency5</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY5" spirit:order="48">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC5</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC5" spirit:order="49">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles5</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES5" spirit:order="50">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF5</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF5" spirit:order="51">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency6</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY6" spirit:order="52">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC6</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC6" spirit:order="53">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles6</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES6" spirit:order="54">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF6</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF6" spirit:order="55">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency7</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY7" spirit:order="56">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC7</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC7" spirit:order="57">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles7</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES7" spirit:order="58">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF7</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF7" spirit:order="59">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency8</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY8" spirit:order="60">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC8</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC8" spirit:order="61">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles8</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES8" spirit:order="62">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF8</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF8" spirit:order="63">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency9</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY9" spirit:order="64">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC9</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC9" spirit:order="65">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles9</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES9" spirit:order="66">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF9</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF9" spirit:order="67">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency10</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY10" spirit:order="68">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC10</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC10" spirit:order="69">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles10</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES10" spirit:order="70">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF10</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF10" spirit:order="71">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency11</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY11" spirit:order="72">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC11</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC11" spirit:order="73">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles11</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES11" spirit:order="74">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF11</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF11" spirit:order="75">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency12</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY12" spirit:order="76">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC12</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC12" spirit:order="77">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles12</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES12" spirit:order="78">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF12</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF12" spirit:order="79">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency13</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY13" spirit:order="80">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC13</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC13" spirit:order="81">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles13</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES13" spirit:order="82">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF13</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF13" spirit:order="83">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency14</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY14" spirit:order="84">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC14</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC14" spirit:order="85">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles14</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES14" spirit:order="86">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF14</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF14" spirit:order="87">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency15</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY15" spirit:order="88">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC15</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC15" spirit:order="89">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles15</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES15" spirit:order="90">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF15</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF15" spirit:order="91">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Output_Frequency16</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_FREQUENCY16" spirit:order="92">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PINC16</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PINC16" spirit:order="93">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phase_Offset_Angles16</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PHASE_OFFSET_ANGLES16" spirit:order="94">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POFF16</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.POFF16" spirit:order="95">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>POR_mode</spirit:name>
      <spirit:displayName>POR Mode</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.POR_MODE" spirit:order="96">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GUI_Behaviour</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.GUI_BEHAVIOUR" spirit:choiceRef="choices_18" spirit:order="97">Coregen</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>explicit_period</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.EXPLICIT_PERIOD" spirit:order="98">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>period</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PERIOD" spirit:order="99">1</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:taxonomies>
        <xilinx:taxonomy>/Digital_Signal_Processing/Modulation</xilinx:taxonomy>
        <xilinx:taxonomy>/Digital_Signal_Processing/Waveform_Synthesis</xilinx:taxonomy>
        <xilinx:taxonomy>/Communication_&amp;_Networking/Modulation</xilinx:taxonomy>
        <xilinx:taxonomy>/Digital_Signal_Processing/Trig_Functions</xilinx:taxonomy>
        <xilinx:taxonomy>/Math_Functions/Trig_Functions</xilinx:taxonomy>
      </xilinx:taxonomies>
      <xilinx:displayName>DDS Compiler</xilinx:displayName>
      <xilinx:hideInCatalogGUI>false</xilinx:hideInCatalogGUI>
      <xilinx:upgrades>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:1.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:1.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:2.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:2.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:3.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:4.0</xilinx:canUpgradeFrom>
      </xilinx:upgrades>
      <xilinx:coreCreationDateTime>2018-01-09T07:14:35</xilinx:coreCreationDateTime>
    </xilinx:coreExtensions>
    <xilinx:coreProperties>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QSpartan6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QSpartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Kintex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QKintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QKintex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Artix7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">AArtix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QArtix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:customization>
        <xilinx:customizer>Spirit</xilinx:customizer>
        <xilinx:elaborator>Sim</xilinx:elaborator>
        <xilinx:customizationTarget>dds_compiler_v5.0.class</xilinx:customizationTarget>
        <xilinx:guiType>Cpp</xilinx:guiType>
        <xilinx:coreMixedCaseComponentName>false</xilinx:coreMixedCaseComponentName>
        <xilinx:upgrades>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:1.0</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:1.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:2.0</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:2.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:3.0</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dds_compiler:4.0</xilinx:canUpgradeFrom>
        </xilinx:upgrades>
      </xilinx:customization>
      <xilinx:generation>
        <xilinx:generationFlow>Spirit</xilinx:generationFlow>
        <xilinx:deliverSimulationModel>true</xilinx:deliverSimulationModel>
        <xilinx:disableFootprint>false</xilinx:disableFootprint>
        <xilinx:forceStructuralVhdlModel>false</xilinx:forceStructuralVhdlModel>
        <xilinx:forceStructuralVerilogModel>true</xilinx:forceStructuralVerilogModel>
        <xilinx:keepCfamilyInCoreWrapperHdl>true</xilinx:keepCfamilyInCoreWrapperHdl>
        <xilinx:keepCxdevicefamilyInCoreWrapperHdl>true</xilinx:keepCxdevicefamilyInCoreWrapperHdl>
        <xilinx:disableTopLevelCoreOutputProducts>false</xilinx:disableTopLevelCoreOutputProducts>
        <xilinx:synthesisRunOptions>
          <xilinx:option xilinx:resolve="immediate">-flow coregen</xilinx:option>
        </xilinx:synthesisRunOptions>
      </xilinx:generation>
      <xilinx:display>
        <xilinx:displayName>DDS Compiler</xilinx:displayName>
        <xilinx:ipType>Spirit</xilinx:ipType>
        <xilinx:hideInGUI>false</xilinx:hideInGUI>
        <xilinx:coreCreationDateTime>2018-01-09T07:14:35</xilinx:coreCreationDateTime>
        <xilinx:taxonomies>
          <xilinx:taxonomy>/Digital_Signal_Processing/Modulation</xilinx:taxonomy>
          <xilinx:taxonomy>/Digital_Signal_Processing/Waveform_Synthesis</xilinx:taxonomy>
          <xilinx:taxonomy>/Communication_&amp;_Networking/Modulation</xilinx:taxonomy>
          <xilinx:taxonomy>/Digital_Signal_Processing/Trig_Functions</xilinx:taxonomy>
          <xilinx:taxonomy>/Math_Functions/Trig_Functions</xilinx:taxonomy>
        </xilinx:taxonomies>
      </xilinx:display>
    </xilinx:coreProperties>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2013.3.0</xilinx:xilinxVersion>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
