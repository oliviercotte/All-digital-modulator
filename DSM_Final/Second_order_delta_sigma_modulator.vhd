-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\dsm_fpga\Second_order_delta_sigma_modulator.vhd
-- Created: 2017-12-27 18:40:55
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.2
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- v                             ce_out        0.2
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Second_order_delta_sigma_modulator
-- Source Path: dsm_fpga/Second_order_delta_sigma_modulator
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Second_order_delta_sigma_modulator IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        u                                 :   IN    std_logic_vector(35 DOWNTO 0);  -- sfix36_En32
        ce_out                            :   OUT   std_logic;
        v                                 :   OUT   std_logic_vector(35 DOWNTO 0)  -- sfix36_En32
        );
END Second_order_delta_sigma_modulator;


ARCHITECTURE rtl OF Second_order_delta_sigma_modulator IS

  -- Component Declarations
  COMPONENT MATLAB_Function
    PORT( u                               :   IN    std_logic_vector(35 DOWNTO 0);  -- sfix36_En32
          y                               :   OUT   std_logic_vector(35 DOWNTO 0)  -- sfix36_En32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : MATLAB_Function
    USE ENTITY work.MATLAB_Function(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL u_signed                         : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Digital_PCM_signal               : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Integrator_1                     : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Gain1_cast                       : signed(71 DOWNTO 0);  -- sfix72_En64
  SIGNAL Gain1_out1                       : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL y                                : std_logic_vector(35 DOWNTO 0);  -- ufix36
  SIGNAL y_signed                         : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Sigma                            : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Sum_out1                         : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Delay1_out1                      : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Sum1_out1                        : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Add_out1                         : signed(35 DOWNTO 0);  -- sfix36_En32
  SIGNAL Add1_out1                        : signed(35 DOWNTO 0);  -- sfix36_En32

BEGIN
  -- <S1>/MATLAB Function
  u_MATLAB_Function : MATLAB_Function
    PORT MAP( u => std_logic_vector(Add1_out1),  -- sfix36_En32
              y => y  -- sfix36_En32
              );

  u_signed <= signed(u);

  -- <S1>/Gain
  Digital_PCM_signal <= u_signed;

  enb <= clk_enable;

  -- <S1>/Gain1
  Gain1_cast <= resize(Integrator_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 72);
  Gain1_out1 <= Gain1_cast(67 DOWNTO 32);

  y_signed <= signed(y);

  -- <S1>/Sum3
  Sigma <= u_signed - y_signed;

  -- <S1>/Sum
  Sum_out1 <= Sigma + Integrator_1;

  -- <S1>/Delay
  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integrator_1 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integrator_1 <= Sum_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  -- <S1>/Sum1
  Sum1_out1 <= Integrator_1 + Delay1_out1;

  -- <S1>/Delay1
  -- 
  -- <S1>/Gain2
  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1 <= Sum1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  -- <S1>/Add
  Add_out1 <= Digital_PCM_signal + Delay1_out1;

  -- <S1>/Add1
  Add1_out1 <= Add_out1 + Gain1_out1;

  ce_out <= clk_enable;

  v <= y;

END rtl;

