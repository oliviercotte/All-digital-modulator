-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\DSM_MOD8_HDL\DSM_MOD8_HDL.vhd
-- Created: 2018-01-07 17:03:01
-- 
-- Generated by MATLAB 8.2 and HDL Coder 3.3
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.33333e-07
-- Target subsystem base rate: 3.33333e-07
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        3.33333e-07
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out1                          ce_out        3.33333e-07
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DSM_MOD8_HDL
-- Source Path: DSM_MOD8_HDL
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DSM_MOD8_HDL IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1                               :   IN    std_logic_vector(45 DOWNTO 0);  -- sfix46_En40
        ce_out                            :   OUT   std_logic;
        Out1                              :   OUT   std_logic_vector(1 DOWNTO 0)  -- sfix2
        );
END DSM_MOD8_HDL;


ARCHITECTURE rtl OF DSM_MOD8_HDL IS

  -- Component Declarations
  COMPONENT Quantizer
    PORT( u                               :   IN    std_logic_vector(45 DOWNTO 0);  -- sfix46_En40
          y                               :   OUT   std_logic_vector(45 DOWNTO 0)  -- sfix46_En40
          );
  END COMPONENT;

  COMPONENT Sign
    PORT( u                               :   IN    std_logic_vector(45 DOWNTO 0);  -- sfix46_En40
          y                               :   OUT   std_logic_vector(1 DOWNTO 0)  -- sfix2
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Quantizer
    USE ENTITY work.Quantizer(rtl);

  FOR ALL : Sign
    USE ENTITY work.Sign(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Digital_PCM_signal               : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain24_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain28_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain18_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain15_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain8_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain7_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain6_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain5_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain_mul_temp                    : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Modulator_output_signed          : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain25_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En85
  SIGNAL Gain25_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum15_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay6_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain23_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En87
  SIGNAL Gain23_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain19_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En89
  SIGNAL Gain19_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum9_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay4_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain17_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En92
  SIGNAL Gain17_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain4_mul_temp                   : signed(91 DOWNTO 0);  -- sfix92_En94
  SIGNAL Gain4_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum5_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay2_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain3_mul_temp                   : signed(91 DOWNTO 0);  -- sfix92_En99
  SIGNAL Gain3_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain2_mul_temp                   : signed(91 DOWNTO 0);  -- sfix92_En101
  SIGNAL Gain2_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum1_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Modulator_output                 : std_logic_vector(45 DOWNTO 0);  -- ufix46
  SIGNAL Gain1_mul_temp                   : signed(91 DOWNTO 0);  -- sfix92_En107
  SIGNAL Gain1_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay1_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain9_mul_temp                   : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain9_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum_op_stage2                    : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum_out1                         : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain14_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain14_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum1_add_temp                    : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum2_op_stage2                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum2_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain13_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain13_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum3_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay3_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain10_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain10_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum4_op_stage2                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum4_op_stage3                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum4_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain12_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain12_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum6_op_stage2                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum6_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain11_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain11_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum7_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay5_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain20_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain20_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum8_op_stage2                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum8_op_stage3                   : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum8_out1                        : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain16_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain16_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum10_op_stage2                  : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum10_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain21_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain21_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum11_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Delay7_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain26_mul_temp                  : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain26_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum14_op_stage2                  : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum14_op_stage3                  : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum14_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain22_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain22_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum12_op_stage2                  : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum12_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Gain27_cast                      : signed(91 DOWNTO 0);  -- sfix92_En80
  SIGNAL Gain27_out1                      : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sum13_out1                       : signed(45 DOWNTO 0);  -- sfix46_En40
  SIGNAL Sign_out1                        : std_logic_vector(1 DOWNTO 0);  -- ufix2

BEGIN
  u_Quantizer : Quantizer
    PORT MAP( u => std_logic_vector(Delay7_out1),  -- sfix46_En40
              y => Modulator_output  -- sfix46_En40
              );

  u_Sign : Sign
    PORT MAP( u => Modulator_output,  -- sfix46_En40
              y => Sign_out1  -- sfix2
              );

  Digital_PCM_signal <= signed(In1);

  Gain24_out1 <= to_signed(0, 46);

  Gain28_out1 <= to_signed(0, 46);

  Gain18_out1 <= to_signed(0, 46);

  Gain15_out1 <= to_signed(0, 46);

  Gain8_out1 <= to_signed(0, 46);

  Gain7_out1 <= to_signed(0, 46);

  Gain6_out1 <= to_signed(0, 46);

  Gain5_out1 <= to_signed(0, 46);

  Gain_mul_temp <= to_signed(164393, 46) * Digital_PCM_signal;
  Gain_out1 <= Gain_mul_temp(85 DOWNTO 40);

  enb <= clk_enable;

  Gain25_mul_temp <= signed'("0100100100011111110001000110001000100010100001") * Modulator_output_signed;
  Gain25_out1 <= Gain25_mul_temp(90 DOWNTO 45);

  Delay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay6_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay6_out1 <= Sum15_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Gain23_mul_temp <= signed'("0110011110110000100100011000000100011110101100") * Modulator_output_signed;
  Gain23_out1 <= resize(Gain23_mul_temp(91 DOWNTO 47), 46);

  Gain19_mul_temp <= signed'("0101101110111101010010110010100000111000011000") * Modulator_output_signed;
  Gain19_out1 <= resize(Gain19_mul_temp(91 DOWNTO 49), 46);

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay4_out1 <= Sum9_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Gain17_mul_temp <= signed'("0100101111110011110101010110101100110101101001") * Modulator_output_signed;
  Gain17_out1 <= resize(Gain17_mul_temp(91 DOWNTO 52), 46);

  Gain4_mul_temp <= signed'("0100010111100010001001000000001100011001100001") * Modulator_output_signed;
  Gain4_out1 <= resize(Gain4_mul_temp(91 DOWNTO 54), 46);

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1 <= Sum5_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Gain3_mul_temp <= signed'("0110111101111110001110001001010110001010001100") * Modulator_output_signed;
  Gain3_out1 <= resize(Gain3_mul_temp(91 DOWNTO 59), 46);

  Gain2_mul_temp <= signed'("0100110001010011001011110010100001100011100010") * Modulator_output_signed;
  Gain2_out1 <= resize(Gain2_mul_temp(91 DOWNTO 61), 46);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay_out1 <= Sum1_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Modulator_output_signed <= signed(Modulator_output);

  Gain1_mul_temp <= signed'("0101000001000101000110101000010101000011000000") * Modulator_output_signed;
  Gain1_out1 <= resize(Gain1_mul_temp(91 DOWNTO 67), 46);

  Gain9_mul_temp <= to_signed(1426221439, 46) * Delay1_out1;
  Gain9_out1 <= Gain9_mul_temp(85 DOWNTO 40);

  Sum_op_stage2 <= Gain_out1 - Gain9_out1;

  Sum_out1 <= Sum_op_stage2 - Gain1_out1;

  Gain14_cast <= resize(Sum_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain14_out1 <= Gain14_cast(85 DOWNTO 40);

  Sum1_add_temp <= Gain5_out1 + Gain14_out1;
  Sum1_out1 <= Sum1_add_temp + Delay_out1;

  Sum2_op_stage2 <= Gain6_out1 + Sum1_out1;

  Sum2_out1 <= Sum2_op_stage2 - Gain2_out1;

  Gain13_cast <= resize(Sum2_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain13_out1 <= Gain13_cast(85 DOWNTO 40);

  Sum3_out1 <= Gain13_out1 + Delay1_out1;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1 <= Sum3_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Gain10_mul_temp <= signed'("0000000000001010111001001100100011110111101011") * Delay3_out1;
  Gain10_out1 <= Gain10_mul_temp(85 DOWNTO 40);

  Sum4_op_stage2 <= Gain7_out1 - Gain10_out1;

  Sum4_op_stage3 <= Sum4_op_stage2 + Delay1_out1;

  Sum4_out1 <= Sum4_op_stage3 - Gain3_out1;

  Gain12_cast <= resize(Sum4_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain12_out1 <= Gain12_cast(85 DOWNTO 40);

  Sum5_out1 <= Gain12_out1 + Delay2_out1;

  Sum6_op_stage2 <= Gain8_out1 + Sum5_out1;

  Sum6_out1 <= Sum6_op_stage2 - Gain4_out1;

  Gain11_cast <= resize(Sum6_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain11_out1 <= Gain11_cast(85 DOWNTO 40);

  Sum7_out1 <= Gain11_out1 + Delay3_out1;

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1 <= Sum7_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Gain20_mul_temp <= signed'("0000000000011001000000010100101000000110111100") * Delay5_out1;
  Gain20_out1 <= Gain20_mul_temp(85 DOWNTO 40);

  Sum8_op_stage2 <= Gain15_out1 - Gain20_out1;

  Sum8_op_stage3 <= Sum8_op_stage2 + Delay3_out1;

  Sum8_out1 <= Sum8_op_stage3 - Gain17_out1;

  Gain16_cast <= resize(Sum8_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain16_out1 <= Gain16_cast(85 DOWNTO 40);

  Sum9_out1 <= Gain16_out1 + Delay4_out1;

  Sum10_op_stage2 <= Gain18_out1 + Sum9_out1;

  Sum10_out1 <= Sum10_op_stage2 - Gain19_out1;

  Gain21_cast <= resize(Sum10_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain21_out1 <= Gain21_cast(85 DOWNTO 40);

  Sum11_out1 <= Gain21_out1 + Delay5_out1;

  Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay5_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay5_out1 <= Sum11_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Gain26_mul_temp <= signed'("0000000000100100010011000010110011100110101100") * Delay7_out1;
  Gain26_out1 <= Gain26_mul_temp(85 DOWNTO 40);

  Sum14_op_stage2 <= Gain28_out1 - Gain26_out1;

  Sum14_op_stage3 <= Sum14_op_stage2 + Delay5_out1;

  Sum14_out1 <= Sum14_op_stage3 - Gain23_out1;

  Gain22_cast <= resize(Sum14_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain22_out1 <= Gain22_cast(85 DOWNTO 40);

  Sum15_out1 <= Gain22_out1 + Delay6_out1;

  Sum12_op_stage2 <= Gain24_out1 + Sum15_out1;

  Sum12_out1 <= Sum12_op_stage2 - Gain25_out1;

  Gain27_cast <= resize(Sum12_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 92);
  Gain27_out1 <= Gain27_cast(85 DOWNTO 40);

  Sum13_out1 <= Gain27_out1 + Delay7_out1;

  Delay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay7_out1 <= to_signed(0, 46);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay7_out1 <= Sum13_out1;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  ce_out <= clk_enable;

  Out1 <= Sign_out1;

END rtl;

